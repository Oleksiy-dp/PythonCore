1 less
https://youtu.be/kH0946dh5es 

2 less
https://youtu.be/cQiRAV47HwM

3 less L3. Built-in Types. Base Programming Constructions
https://youtu.be/M6uEOp1hMr4

4 less L4. Control Flow and Conditionals
https://youtu.be/HaCwqA0fOe8

5 less L5. Loops
https://youtu.be/fpqpHDnw-h8




1. Для начала, проверьте, в какой ветке вы находитесь.
$ git branch

Вы получите список всех веток, причем активная будет подсвечена зеленым.

2. Переключитесь в ветку master.
$ git checkout main_Oleksii_Chaika

3. Создание ветки
При работе с репозиторием хорошей практикой считается создание отдельной ветки для внесения изменений, причем это не зависит от размеров проекта.

Имя ветки должно быть коротким и отражать те изменения, которые вы вносите.

Создадим ветку при помощи команды git checkout:

$ git checkout -b Chaika_Oleksii_hw3

8. Удаление ненужной ветки локально

Ветки создаются с какими-то конкретными целями. Когда цель достигнута, необходимость в ветке отпадает, поэтому ее можно удалить.
git branch -D Chaika_Oleksii_hw3

Вы можете удалить и версию этой ветки на GitHub.

git push origin --delete Chaika_Oleksii_hw3_v3
git push origin --delete Chaika_Oleksii_hw2

  Chaika_Oleksii_hw2
  Chaika_Oleksii_hw3
* Chaika_Oleksii_hw3_4
  Chaika_Oleksii_hw3__v3
  Chaika_Oleksii_hw3_v2
  Chaika_Oleksii_hw3_v3
  main_Oleksii_Chaika
  main


7. Синхронизация вашего форка с основной веткой
Прежде чем создавать пул-реквест в оригинальный репозиторий, нужно синхронизировать свой экземпляр этого репозитория с оригинальным.

Даже если вы не собираетесь отправлять пул-реквест в оригинальный репозиторий, все равно лучше синхронизироваться с ним. Со времени создания форка в оригинальном репозитории могли добавиться новые фичи, а также могли быть исправлены какие-то баги.

Проделайте следующие действия, чтобы обновить свой репозиторий и внести соответствующие изменения в свою ветку master:

1. Для начала, проверьте, в какой ветке вы находитесь.
$ git branch
Вы получите список всех веток, причем активная будет подсвечена зеленым.


2. Переключитесь в ветку master.
$ git checkout master

3. Добавьте оригинальный репозиторий в качестве upstream-репозитория.
Чтобы вытащить изменения из оригинального репозитория и перенести их в свою версию, нужно добавить оригинальный git-репозиторий в качестве upstream-репозитория.

$ git remote add upstream [HTTPS]
Здесь [HTTPS] это url, который нужно скопировать из основного репозитория.



4. Fetch репозитория
Заберите (fetch) все изменения из оригинального репозитория. Коммиты, сделанные в оригинальном репозитории, будут сохранены в локальной ветке под названием upstream/master.

$ git fetch upstream

5. Слейте изменения
Слейте (merge) изменения из upstream/master с вашей локальной веткой master. Таким образом главная ветка вашего форка репозитория синхронизируется с upstream-репозиторием без потери ваших локальных изменений.

$ git merge upstream/master
6. Отправьте изменения на GitHub
На этом этапе ваша локальная ветка синхронизирована с веткой master оригинального репозитория. Если вы хотите обновить свой GitHub-репозиторий, нужно отправить в него изменения.

$ git push origin master
  
